import streamlit as st
from bs4 import BeautifulSoup
import pandas as pd
from datetime import datetime,timedelta
import requests
from streamlit_lottie import st_lottie,st_lottie_spinner
import altair as alt
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

def 매매(city, date, user_key, rows, dong):
    url = 'http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev'
    url = url + "?&LAWD_CD=" + city
    url = url + "&DEAL_YMD=" + date[:6]
    url = url + "&serviceKey=" + user_key
    url = url + "&numOfRows=" + rows
    
    xml = requests.get(url)
    result = xml.text
    soup = BeautifulSoup(result, 'lxml-xml')    
    items = soup.find_all("item")    
    aptTrade = pd.DataFrame()
    if len(items) >= 1:
        for item in items:
            if item.find('건축년도') == None :
                continue
            
            else:
                계약            =   item.find("년").text[2:]+'.'+item.find("월").text.zfill(2)+'.'+item.find("일").text.zfill(2)
                시군구           = dong
                면적            = float(item.find("전용면적").text)
                아파트           = item.find("아파트").text
                층              = int(item.find("층").text)
                금액            = item.find("거래금액").text
                건축            = int(item.find("건축년도").text)
                거래            = item.find("거래유형").text
                파기      = item.find("해제사유발생일").text
                동 = item.find("법정동").text
                temp = pd.DataFrame(([[시군구, 아파트, 금액, 층,면적, 건축, 계약 ,동, 거래, 파기]]), 
                                    columns=["시군구", "아파트", "금액", "층", "면적", "건축", "계약", "동", "거래", "파기"])
                aptTrade = pd.concat([aptTrade,temp])
            # replace_word = '파주','아파트','마을','신도시','단지',r'\(.+\)','거래'
            replace_word = r'\(.+\)','거래'
            for i in replace_word:
                aptTrade['아파트'] = aptTrade['아파트'].replace(i,'',regex=True)
                aptTrade['거래'] = aptTrade['거래'].replace(i,'',regex=True)
            aptTrade['금액'] = aptTrade['금액'].replace(',','',regex=True).astype(int)
            # aptTrade['계약'] = pd.to_datetime(aptTrade['계약'],format = "%Y%m%d").dt.strftime('%m.%d')
            aptTrade['면적'] = aptTrade['면적'].astype(float).map('{:.0f}'.format)
            aptTrade['동'] = aptTrade['동'].str.split().str[0]
        return aptTrade.sort_values(by=['아파트'], ascending=True)

            

cred = credentials.Certificate('imi-club-firebase-adminsdk-83dcu-62998c5454.json')

app = firebase_admin.initialize_app(cred)

db = firestore.client()

file_1 = pd.read_csv('/Users/kyu-deokkim/Downloads/address.csv',encoding='cp949')
user_key = 'pRcMh3ZvTSWhUPu4VIMig%2BbD1mnLgAyaxyhB07a86H8XbgJ7ki8JYqk3a6Q6lM%2FN8zhvYZHQsLw0pmbjPBBE%2FA%3D%3D'
rows = '9999'

당월 = datetime.now().date()
전월 = 당월 - timedelta(days=30)

당월합= pd.DataFrame()
전월합= pd.DataFrame()

db_당월매매 = db.collection('kdongsan').document(f"당월매매 {datetime.now().strftime('%Y.%m.%d')}")
db_전월매매 = db.collection('kdongsan').document(f"전월매매 {datetime.now().strftime('%Y.%m.%d')}")
합_당월매매 = {}
합_전월매매 = {}
for city,dong in zip(file_1['법정동코드'].astype(str).str[:5],file_1['법정동명']):
    print(dong)
    당월매매 = 매매(city, 당월.strftime('%Y%m'), user_key, rows, dong)
    당월합 = pd.concat([당월합,당월매매])
    
    전월매매= 매매(city, 전월.strftime('%Y%m'), user_key, rows, dong)
    전월합 = pd.concat([전월합,전월매매])
    
    당월전월합 = pd.concat([당월합]).reset_index(drop=True)
    전월당월합 = pd.concat([전월합]).reset_index(drop=True)
    
    합_당월매매[dong] = 당월전월합[당월전월합['시군구'].str.contains(dong)].drop(columns='시군구').set_index('아파트').to_csv().split('\n')
    합_전월매매[dong] = 전월당월합[전월당월합['시군구'].str.contains(dong)].drop(columns='시군구').set_index('아파트').to_csv().split('\n')

db_당월매매.update(합_당월매매)
db_전월매매.update(합_전월매매)
