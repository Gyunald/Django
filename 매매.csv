import streamlit as st
from bs4 import BeautifulSoup
import pandas as pd
from datetime import datetime,timedelta
import requests
from streamlit_lottie import st_lottie,st_lottie_spinner
import altair as alt
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

def 매매(city, date, user_key, rows, dong):
    url = "http://openapi.molit.go.kr/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTradeDev"
    url = url + "?&LAWD_CD=" + city
    url = url + "&DEAL_YMD=" + date[:6]
    url = url + "&serviceKey=" + user_key
    url = url + "&numOfRows=" + rows
    
    xml = requests.get(url)
    result = xml.text
    soup = BeautifulSoup(result, 'lxml-xml')    
    
    items = soup.findAll("item")
    aptTrade = pd.DataFrame()
    if len(items) > 1:
        for item in items:
            계약            =   item.find("년").text[2:]+'.'+item.find("월").text.zfill(2)+'.'+item.find("일").text.zfill(2)
            시군구                  = dong
            면적            = float(item.find("전용면적").text)
            아파트              = item.find("아파트").text
            층                  = int(item.find("층").text)
            금액            = item.find("거래금액").text
            건축            = int(item.find("건축년도").text)
            거래            = item.find("거래유형").text
            파기      = item.find("해제사유발생일").text
            동 = item.find("법정동").text
            temp = pd.DataFrame(([[시군구, 아파트, 금액, 층,면적, 건축, 계약 ,동, 거래, 파기]]), 
                                columns=["시군구", "아파트", "금액", "층", "면적", "건축", "계약", "동", "거래", "파기"])
            aptTrade = pd.concat([aptTrade,temp])
        replace_word = '파주','아파트','마을','신도시','단지',r'\(.+\)'
        for i in replace_word:
            aptTrade['아파트'] = aptTrade['아파트'].str.replace(i,'',regex=True)
            aptTrade['거래'] = aptTrade['거래'].str.replace(i,'',regex=True)
        aptTrade['금액'] = aptTrade['금액'].str.replace(',','').astype(int)
        # aptTrade['계약'] = pd.to_datetime(aptTrade['계약'],format = "%Y%m%d").dt.strftime('%m.%d')
        aptTrade['면적'] = aptTrade['면적'].astype(float).map('{:.0f}'.format)
        aptTrade['동'] = aptTrade['동'].str.split().str[0]
        return aptTrade.sort_values(by=['아파트'], ascending=True)
    else:
        return

cred = credentials.Certificate('imi-club-firebase-adminsdk-83dcu-9b2da08252.json')

app = firebase_admin.initialize_app(cred)

db = firestore.client()

file_1 = pd.read_csv('https://raw.githubusercontent.com/Gyunald/land/main/address.csv',encoding='cp949')
user_key = 'pRcMh3ZvTSWhUPu4VIMig%2BbD1mnLgAyaxyhB07a86H8XbgJ7ki8JYqk3a6Q6lM%2FN8zhvYZHQsLw0pmbjPBBE%2FA%3D%3D'
rows = '9999'
당월 = datetime.now().date()
전월 = 당월 - timedelta(days=30)

당월합= pd.DataFrame()
전월합= pd.DataFrame()

for city,dong in zip(file_1['법정동코드'].astype(str).str[:5],file_1['법정동명']):
    print(dong)
    당월매매 = 매매(city, 당월.strftime('%Y%m'), user_key, rows, dong)
    전월매매= 매매(city, 전월.strftime('%Y%m'), user_key, rows, dong)
    당월합 = pd.concat([당월합,당월매매])
    전월합 = pd.concat([전월합,전월매매])
    당월전월합 = pd.concat([당월합,전월합])

    db = db.collection('kdongsan').document('부동산매매').set(
        {
            datetime.now().strftime('%Y.%m.%d') :
            {
                dong.split()[0] : [i for i in 당월전월합[당월전월합['시군구'].str.contains(dong)].set_index('시군구').to_csv().split('\n')]
            }
        }
)
